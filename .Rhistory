install.packages("ISLR2")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
data(prostate, package = 'faraway')
# set random seed for reproducability
set.seed(123456)
# replace the lpsa column with pure noise
prostate_fake = prostate |>
select(-lpsa) |>
mutate(noise = runif(nrow(prostate), min = -1, max = 1))
# train/test split
n = nrow(prostate)
train = sample(1:n, size = 49)
test = !(1:n %in% train)
# write data to a file
write_csv(prostate_fake[train,], 'prostate_fake_train.csv')
write_csv(prostate_fake[test,], 'prostate_fake_test.csv')
data(Boston, package='ISLR2')
mod_start <- lm(crim ~ 1, data=Boston)
mod_forwd_aic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'forward')
n <- nrow(Boston)
mod_forwd_bic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'forward', k=log(n))
print(coef(mod_forwd_aic))
print(coef(mod_forwd_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('rad,lstat,medv,ptratio', 'rad,lstat')
criterion_values <- c(extractAIC(mod_forwd_aic)[2], extractAIC(mod_forwd_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
data(Boston, package='ISLR2')
mod_start <- lm(crim ~ ., data=Boston)
mod_back_aic <- step(mod_start, direction = 'backward')
n <- nrow(Boston)
mod_back_bic <- step(mod_start, direction = 'backward', k=log(n))
print(coef(mod_forwd_aic))
print(coef(mod_forwd_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('zn,nox,dis,rad,ptratio,lstat,medv', 'zn,dis,rad,medv')
criterion_values <- c(extractAIC(mod_forwd_aic)[2], extractAIC(mod_forwd_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
data(Boston, package='ISLR2')
mod_start <- lm(crim ~ 1, data=Boston)
mod_step_aic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both')
n <- nrow(Boston)
mod_step_bic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both', k=log(n))
print(coef(mod_step_aic))
print(coef(mod_step_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('rad,lstat,medv,ptratio', 'rad,lstat')
criterion_values <- c(extractAIC(mod_step_aic)[2], extractAIC(mod_step_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
library(leaps)
mod_exhaustive = summary(regsubsets(crim ~ ., data=Boston, nvmax = 12))
bestr2 <- mod_exhaustive$which[which.max(mod_exhaustive$adjr2),]
p <- ncol(mod_exhaustive$which)
mod_aic <- n * log(mod_exhaustive$rss / n) + 2 * (2:p)
mod_bic <- n * log(mod_exhaustive$rss / n) + log(n) * (2:p)
bestaic <- mod_exhaustive$which[which.min(mod_aic),]
bestr2mod <- lm(crim~zn+dis+rad+ptratio+lstat+medv, data=Boston)
bestaicmod <- lm(crim~rad+lstat, data=Boston)
bestbic <- mod_exhaustive$which[which.min(mod_bic),]
bestbicmod <- lm(crim~zn+indus+nox+rm+dis+rad+ptratio+lstat+medv, data=Boston)
quality_criterion <- c('R2_a', 'AIC', 'BIC')
variables_chosen <- c('lcavol, lweight, age, lbph, svi, lcp, pgg45', 'lcavol, lweight, age, lbph, svi', 'lcavol, lweight, svi')
criterion_values <- c(max(mod_exhaustive$adjr2), min(mod_aic), min(mod_bic))
data.frame(quality_criterion, variables_chosen, criterion_values)
calc_loocv_rmse = function(model) {
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
partone_aic =  calc_loocv_rmse(mod_forwd_aic)
partone_bic = calc_loocv_rmse(mod_forwd_bic)
parttwo_aic = calc_loocv_rmse(mod_back_aic)
parttwo_bic = calc_loocv_rmse(mod_back_bic)
partthree_aic = calc_loocv_rmse(mod_stepwise_aic)
data(Boston, package='ISLR2')
mod_start <- lm(crim ~ 1, data=Boston)
mod_stepwise_aic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both')
n <- nrow(Boston)
mod_stepwise_bic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both', k=log(n))
print(coef(mod_step_aic))
print(coef(mod_step_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('rad,lstat,medv,ptratio', 'rad,lstat')
criterion_values <- c(extractAIC(mod_step_aic)[2], extractAIC(mod_step_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
library(leaps)
mod_exhaustive = summary(regsubsets(crim ~ ., data=Boston, nvmax = 12))
bestr2 <- mod_exhaustive$which[which.max(mod_exhaustive$adjr2),]
p <- ncol(mod_exhaustive$which)
mod_aic <- n * log(mod_exhaustive$rss / n) + 2 * (2:p)
mod_bic <- n * log(mod_exhaustive$rss / n) + log(n) * (2:p)
bestaic <- mod_exhaustive$which[which.min(mod_aic),]
bestr2mod <- lm(crim~zn+dis+rad+ptratio+lstat+medv, data=Boston)
bestaicmod <- lm(crim~rad+lstat, data=Boston)
bestbic <- mod_exhaustive$which[which.min(mod_bic),]
bestbicmod <- lm(crim~zn+indus+nox+rm+dis+rad+ptratio+lstat+medv, data=Boston)
quality_criterion <- c('R2_a', 'AIC', 'BIC')
variables_chosen <- c('lcavol, lweight, age, lbph, svi, lcp, pgg45', 'lcavol, lweight, age, lbph, svi', 'lcavol, lweight, svi')
criterion_values <- c(max(mod_exhaustive$adjr2), min(mod_aic), min(mod_bic))
data.frame(quality_criterion, variables_chosen, criterion_values)
calc_loocv_rmse = function(model) {
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
partone_aic =  calc_loocv_rmse(mod_forwd_aic)
partone_bic = calc_loocv_rmse(mod_forwd_bic)
parttwo_aic = calc_loocv_rmse(mod_back_aic)
parttwo_bic = calc_loocv_rmse(mod_back_bic)
partthree_aic = calc_loocv_rmse(mod_stepwise_aic)
partthree_bic = calc_loocv_rmse(mod_stepwise_bic)
part_four_rsq = calc_loocv_rmse(bestr2mod)
partfour_aic = calc_loocv_rmse(bestaicmod)
partfour_bic = calc_loocv_rmse(bestbicmod)
LOOCV <- c(partone_aic, partone_bic, parttwo_aic, parttwo_bic, partthree_aic, partthree_bic, part_four_rsq, partfour_aic, partfour_bic)
ModelNames <- c("partone_aic", "partone_bic", "parttwo_aic", "parttwo_bic", "partthree_aic", "partthree_bic", "part_four_rsq", "partfour_aic", "partfour_bic")
frame <- data.frame(ModelNames, LOOCV)
frame
print(frame$ModelNames[which.min(frame$LOOCV)])
print(min(frame$LOOCV))
data(prostate, package = 'faraway')
mod_start <- lm(lpsa ~ 1, data=prostate)
mod_forwd_aic <- step(mod_start, scope=lpsa ~ lcavol + lweight + age + lbph + svi + lcp + gleason + pgg45, direction = 'forward')
n <- nrow(prostate)
mod_forwd_bic <- step(mod_start, scope=lpsa ~ lcavol + lweight + age + lbph + svi + lcp + gleason + pgg45, direction = 'forward', k=log(n))
print(coef(mod_forwd_aic))
print(coef(mod_forwd_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('lcavol,lweight,svi,lbph,age', 'lcavol,lweight,svi')
criterion_values <- c(extractAIC(mod_forwd_aic)[2], extractAIC(mod_forwd_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
mod_all_preds <- lm(lpsa ~ ., data=prostate)
mod_back_aic <- step(mod_all_preds, direction = 'backward')
n <- nrow(prostate)
mod_back_bic <- step(mod_all_preds, direction = 'backward', k=log(n))
print(coef(mod_back_aic))
print(coef(mod_back_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('lcavol,lweight,svi,lbph,age', 'lcavol,lweight,svi')
criterion_values <- c(extractAIC(mod_back_aic)[2], extractAIC(mod_back_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
mod_start <- lm(lpsa ~ 1, data=prostate)
mod_stepwise_aic <- step(mod_start, scope=lpsa ~ lcavol + lweight + age + lbph + svi + lcp + gleason + pgg45, direction = 'both')
n <- nrow(prostate)
mod_stepwise_bic <- step(mod_start, scope=lpsa ~ lcavol + lweight + age + lbph + svi + lcp + gleason + pgg45, direction = 'both', k=log(n))
print(coef(mod_stepwise_aic))
print(coef(mod_stepwise_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('lcavol,lweight,svi,lbph,age', 'lcavol,lweight,svi')
criterion_values <- c(extractAIC(mod_stepwise_aic)[2], extractAIC(mod_stepwise_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
library(leaps)
mod_exhaustive = summary(regsubsets(lpsa ~ ., data=prostate, nvmax = 8))
bestr2 <- mod_exhaustive$which[which.max(mod_exhaustive$adjr2),]
p <- ncol(mod_exhaustive$which)
mod_aic <- n * log(mod_exhaustive$rss / n) + 2 * (2:p)
mod_bic <- n * log(mod_exhaustive$rss / n) + log(n) * (2:p)
bestaic <- mod_exhaustive$which[which.min(mod_aic),]
bestr2mod <- lm(lpsa~lcavol+lweight+age+lbph+svi+lcp+pgg45, data=prostate)
bestaicmod <- lm(lpsa~lcavol+lweight+age+lbph+svi, data=prostate)
bestbic <- mod_exhaustive$which[which.min(mod_bic),]
bestbicmod <- lm(lpsa~lcavol+lweight+svi, data=prostate)
quality_criterion <- c('R2_a', 'AIC', 'BIC')
variables_chosen <- c('lcavol, lweight, age, lbph, svi, lcp, pgg45', 'lcavol, lweight, age, lbph, svi', 'lcavol, lweight, svi')
criterion_values <- c(max(mod_exhaustive$adjr2), min(mod_aic), min(mod_bic))
data.frame(quality_criterion, variables_chosen, criterion_values)
calc_loocv_rmse = function(model) {
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
partone_aic =  calc_loocv_rmse(mod_forwd_aic)
partone_bic = calc_loocv_rmse(mod_forwd_bic)
parttwo_aic = calc_loocv_rmse(mod_back_aic)
parttwo_bic = calc_loocv_rmse(mod_back_bic)
partthree_aic = calc_loocv_rmse(mod_stepwise_aic)
partthree_bic = calc_loocv_rmse(mod_stepwise_bic)
part_four_rsq = calc_loocv_rmse(bestr2mod)
partfour_aic = calc_loocv_rmse(bestaicmod)
partfour_bic = calc_loocv_rmse(bestbicmod)
LOOCV <- c(partone_aic, partone_bic, parttwo_aic, parttwo_bic, partthree_aic, partthree_bic, part_four_rsq, partfour_aic, partfour_bic)
ModelNames <- c("partone_aic", "partone_bic", "parttwo_aic", "parttwo_bic", "partthree_aic", "partthree_bic", "part_four_rsq", "partfour_aic", "partfour_bic")
frame <- data.frame(ModelNames, LOOCV)
frame
print(frame$ModelNames[which.min(frame$LOOCV)])
print(min(frame$LOOCV))
data(Boston, package='ISLR2')
mod_start <- lm(crim ~ 1, data=Boston)
mod_forwd_aic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'forward')
n <- nrow(Boston)
mod_forwd_bic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'forward', k=log(n))
print(coef(mod_forwd_aic))
print(coef(mod_forwd_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('rad,lstat,medv,ptratio', 'rad,lstat')
criterion_values <- c(extractAIC(mod_forwd_aic)[2], extractAIC(mod_forwd_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
data(Boston, package='ISLR2')
mod_start <- lm(crim ~ ., data=Boston)
mod_back_aic <- step(mod_start, direction = 'backward')
n <- nrow(Boston)
mod_back_bic <- step(mod_start, direction = 'backward', k=log(n))
print(coef(mod_forwd_aic))
print(coef(mod_forwd_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('zn,nox,dis,rad,ptratio,lstat,medv', 'zn,dis,rad,medv')
criterion_values <- c(extractAIC(mod_forwd_aic)[2], extractAIC(mod_forwd_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
data(Boston, package='ISLR2')
mod_start <- lm(crim ~ 1, data=Boston)
mod_stepwise_aic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both')
n <- nrow(Boston)
mod_stepwise_bic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both', k=log(n))
print(coef(mod_step_aic))
print(coef(mod_step_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('rad,lstat,medv,ptratio', 'rad,lstat')
criterion_values <- c(extractAIC(mod_step_aic)[2], extractAIC(mod_step_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
library(leaps)
mod_exhaustive = summary(regsubsets(crim ~ ., data=Boston, nvmax = 12))
bestr2 <- mod_exhaustive$which[which.max(mod_exhaustive$adjr2),]
p <- ncol(mod_exhaustive$which)
mod_aic <- n * log(mod_exhaustive$rss / n) + 2 * (2:p)
mod_bic <- n * log(mod_exhaustive$rss / n) + log(n) * (2:p)
bestaic <- mod_exhaustive$which[which.min(mod_aic),]
bestr2mod <- lm(crim~zn+dis+rad+ptratio+lstat+medv, data=Boston)
bestaicmod <- lm(crim~rad+lstat, data=Boston)
bestbic <- mod_exhaustive$which[which.min(mod_bic),]
bestbicmod <- lm(crim~zn+indus+nox+rm+dis+rad+ptratio+lstat+medv, data=Boston)
quality_criterion <- c('R2_a', 'AIC', 'BIC')
variables_chosen <- c('lcavol, lweight, age, lbph, svi, lcp, pgg45', 'lcavol, lweight, age, lbph, svi', 'lcavol, lweight, svi')
criterion_values <- c(max(mod_exhaustive$adjr2), min(mod_aic), min(mod_bic))
data.frame(quality_criterion, variables_chosen, criterion_values)
calc_loocv_rmse = function(model) {
sqrt(mean((resid(model) / (1 - hatvalues(model))) ^ 2))
}
partone_aic =  calc_loocv_rmse(mod_forwd_aic)
partone_bic = calc_loocv_rmse(mod_forwd_bic)
parttwo_aic = calc_loocv_rmse(mod_back_aic)
parttwo_bic = calc_loocv_rmse(mod_back_bic)
partthree_aic = calc_loocv_rmse(mod_stepwise_aic)
partthree_bic = calc_loocv_rmse(mod_stepwise_bic)
part_four_rsq = calc_loocv_rmse(bestr2mod)
partfour_aic = calc_loocv_rmse(bestaicmod)
partfour_bic = calc_loocv_rmse(bestbicmod)
LOOCV <- c(partone_aic, partone_bic, parttwo_aic, parttwo_bic, partthree_aic, partthree_bic, part_four_rsq, partfour_aic, partfour_bic)
ModelNames <- c("partone_aic", "partone_bic", "parttwo_aic", "parttwo_bic", "partthree_aic", "partthree_bic", "part_four_rsq", "partfour_aic", "partfour_bic")
frame <- data.frame(ModelNames, LOOCV)
frame
print(frame$ModelNames[which.min(frame$LOOCV)])
print(min(frame$LOOCV))
data(Boston, package='ISLR2')
mod_start <- lm(crim ~ 1, data=Boston)
mod_stepwise_aic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both')
n <- nrow(Boston)
mod_stepwise_bic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both', k=log(n))
print(coef(mod_step_aic))
print(coef(mod_step_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('rad,lstat,medv,ptratio', 'rad,lstat')
criterion_values <- c(extractAIC(mod_stepwise_aic)[2], extractAIC(mod_stepwise_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
data(Boston, package='ISLR2')
mod_start <- lm(crim ~ 1, data=Boston)
mod_stepwise_aic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both')
n <- nrow(Boston)
mod_stepwise_bic <- step(mod_start, scope=crim ~ zn + indus + chas + nox + rm + age + dis + rad + tax + ptratio + lstat + medv, direction = 'both', k=log(n))
print(coef(mod_stepwise_aic))
print(coef(mod_stepwise_bic))
quality_criterion <- c('AIC', 'BIC')
variables <- c('rad,lstat,medv,ptratio', 'rad,lstat')
criterion_values <- c(extractAIC(mod_stepwise_aic)[2], extractAIC(mod_stepwise_bic, k=log(n))[2])
data.frame(quality_criterion, variables, criterion_values)
train_data <- read.csv('prostate_fake_train.csv')
mod_start <- lm(noise ~ ., data=train_data)
mod_back_aic <- step(mod_start, direction = 'backward')
n <- nrow(train_data)
#mod_forwd_bic <- step(mod_start, direction = 'backward', k=log(n))
#print(coef(mod_forwd_aic))
#print(coef(mod_forwd_bic))
#quality_criterion <- c('AIC', 'BIC')
#variables <- c('zn,nox,dis,rad,ptratio,lstat,medv', 'zn,dis,rad,medv')
#criterion_values <- c(extractAIC(mod_forwd_aic)[2], extractAIC(mod_forwd_bic, k=log(n))[2])
#data.frame(quality_criterion, variables, criterion_values)
train_data <- read.csv('prostate_fake_train.csv')
mod_start <- lm(noise ~ ., data=train_data)
mod_back_aic <- step(mod_start, direction = 'backward')
train_data <- read.csv('prostate_fake_train.csv')
mod_start <- lm(noise ~ ., data=train_data)
mod_back_aic <- step(mod_start, direction = 'backward')
mod_back_aic$coefficients
train_data <- read.csv('prostate_fake_train.csv')
model <- lm(noise ~ lweight + gleason + pgg45, data=train_data)
train_data <- read.csv('prostate_fake_train.csv')
model <- lm(noise ~ lweight + gleason + pgg45, data=train_data)
summary(model)
train_data <- read.csv('prostate_fake_train.csv')
model <- lm(noise ~ lweight + gleason + pgg45, data=train_data)
summary(model)
test_data <- read.csv('prostate_fake_test.csv')
model <- lm(noise ~ lweight + gleason + pgg45, data=test_data)
summary(model)
